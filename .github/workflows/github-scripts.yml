name: Learning GitHub Script
on:
  issues:
    types: [opened]
jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
    - name: Comment on new issue
      uses: actions/github-script@0.8.0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
            github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: "ðŸŽ‰ You've created this issue comment using GitHub Script!!!"
            });
    - name: Add issue to project board
      if: contains(github.event.issue.labels.*.name, 'bug')
      uses: actions/github-script@0.8.0
      env: 
        projectName: hello-world-project
        columnName: Bug Backlog
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        #project-name: 'hello-world-project'
        #column-name-to-find: 'Bug Backlog'
        script: |
            const projectName = process.env.projectName;
            const columnName = process.env.columnName;
  
            // 1. Get the project ID by name (you might need to adjust this if you have multiple projects with the same name)
            const projects = await github.projects.listForUser({
              username: context.repo.owner
            });

            console.log('projects', projects);
  
            /*
            const targetProject = projects.data.find(project => project.name === projectName);
  
            if (!targetProject) {
              console.log(`Project "${projectName}" not found.`);
              return;
            }
  
            const projectId = targetProject.id;
  
            // 2. List the columns for the found project
            const columns = await github.projects.listColumns({
              project_id: projectId,
            });
  
            // 3. Find the target column by name
            const targetColumn = columns.data.find(column => column.name === columnName);
  
            if (!targetColumn) {
              console.log(`Column "${columnName}" not found in project "${projectName}".`);
              return;
            }
  
            const columnId = targetColumn.id;
  
            // 4. Create the card in the found column
            github.projects.createCard({
            column_id: columnId,
            content_id: context.payload.issue.id,
            content_type: "Issue"
            });*/
